#pragma checksum "C:\Users\Rhys\source\repos\SmartWatts\SmartWattsUi\Pages\AddRide.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8ad3492c3fcbb4da534ec56b208cee7615b25f16"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SmartWattsUi.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Rhys\source\repos\SmartWatts\SmartWattsUi\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Rhys\source\repos\SmartWatts\SmartWattsUi\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Rhys\source\repos\SmartWatts\SmartWattsUi\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Rhys\source\repos\SmartWatts\SmartWattsUi\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Rhys\source\repos\SmartWatts\SmartWattsUi\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Rhys\source\repos\SmartWatts\SmartWattsUi\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Rhys\source\repos\SmartWatts\SmartWattsUi\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Rhys\source\repos\SmartWatts\SmartWattsUi\_Imports.razor"
using SmartWattsUi;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Rhys\source\repos\SmartWatts\SmartWattsUi\_Imports.razor"
using SmartWattsUi.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\Rhys\source\repos\SmartWatts\SmartWattsUi\Pages\AddRide.razor"
using Blazor.FileReader;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Rhys\source\repos\SmartWatts\SmartWattsUi\Pages\AddRide.razor"
using SmartWattsUi.Controllers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Rhys\source\repos\SmartWatts\SmartWattsUi\Pages\AddRide.razor"
using SmartWattsCore.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Rhys\source\repos\SmartWatts\SmartWattsUi\Pages\AddRide.razor"
using SmartWattsCore;

#line default
#line hidden
#nullable disable
    public partial class AddRide : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 85 "C:\Users\Rhys\source\repos\SmartWatts\SmartWattsUi\Pages\AddRide.razor"
       
		List<Ride> newRides;
		ElementReference rideFileElem;
		IFileReaderRef readerRideFile;
		Ride ride;
		int timeFrame = 30;
		string ridesToAdd = "";
		string dupeRides = "";
		int ridesToLoad;
		int ridesLoaded;
		bool editMode = false;
		string newName;


	protected override void OnInitialized()
	{

	}

	private async Task UploadFile()
	{
		readerRideFile = fileReaderService.CreateReference(rideFileElem);
		var rideFiles = (await readerRideFile.EnumerateFilesAsync());

		if (rideFiles.Count() > 1)
		{
			await ParseRideMultiple(rideFiles);
		}
		else
		{
			await ParseSingle(rideFiles.FirstOrDefault());
		}
	}

	private async Task ParseSingle(IFileReference rideFile)
	{

		ride = await _rideController.ParseRideFile(rideFile);
		ride.Cyclist = _appState.LoggedInUser;

		_rideController.GetPowerCurveHistory(ride);

		CheckForDuplicate(ride);
	}

	private async Task ParseRideMultiple(IEnumerable<IFileReference> rideFiles)
	{
		ridesToLoad = rideFiles.Count();
		ridesLoaded = 0;
		newRides = new List<Ride>();

		foreach (var rf in rideFiles)
		{
			var ride = await _rideController.ParseRideFile(rf);
			ride.Cyclist = _appState.LoggedInUser;

			if (CheckForDuplicate(ride))
			{
				ridesLoaded++;
				this.StateHasChanged();
				continue;
			}

			newRides.Add(ride);
			ridesToAdd += ride.RideMetaData.RideName + " / ";
			ridesLoaded++;
			this.StateHasChanged();
		}
	}

	private void ChangeName()
	{
		ride.RideMetaData.RideName = newName;
		editMode = false;
		StateHasChanged();
	}

	private async Task SubmitRide()
	{
		_appState.ToggleLoader(true, "Saving Ride");

		await _rideController.InsertRide(ride);
		List<Ride> singleRideList = new List<Ride>() { ride };
		_appState.AppendRide(singleRideList);

		_appState.ToggleLoader(false);
		Toast.PopToast($"{ride.RideMetaData.RideName} saved!", "lightgreen");
		_appState.ToggleAddWindow(false);
	}

	private async Task SubmitRideMultiple()
	{
		_appState.ToggleLoader(true, $"Saving {newRides.Count()} Rides");

		await _rideController.InsertRides(newRides);
		_appState.AppendRide(newRides);

		_appState.ToggleLoader(false);
		Toast.PopToast($"{newRides.Count()} rides saved!", "lightgreen");
		_appState.ToggleAddWindow(false);

	}

	private bool CheckForDuplicate(Ride ride)
	{
		var dupe = _appState.LoggedInUser.Rides.FirstOrDefault(r => r.RideMetaData.Date.AddMinutes(2) > ride.RideMetaData.Date && r.RideMetaData.Date.AddMinutes(-2) < ride.RideMetaData.Date);

		if (dupe == null)
		{
			return false;
		}
		else
		{
			dupeRides += dupe.RideMetaData.RideName + " - " + dupe.RideMetaData.Date.ToString() + " / ";
			return true;
		}
	}

	private void Cancel()
	{
		_appState.ToggleAddWindow(false);
	}

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AppState _appState { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private RideController _rideController { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IFileReaderService fileReaderService { get; set; }
    }
}
#pragma warning restore 1591
